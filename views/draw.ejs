<!DOCTYPE html>
<html>
	<head>
		<!--
		http://www.html5canvastutorials.com/tutorials/html5-canvas-arcs/
		http://www.williammalone.com/articles/create-html5-canvas-javascript-drawing-app/#demo-simple

		-->
		<style type="text/css" media="screen">
			#draw-wrapper {
				width: 300px;
				margin: auto;
			}
			#draw-area {
				background: #eee;
				border: 2px inset #bbb;
				clear: both;
			}
			#toolbar-area {
			}
			.toolbar {
				clear: left;
			}
			.toolbar .pallet {
				width: 50px;
				height: 50px;
				border: 2px solid black;
				float: left;
			}
			#color-selector #black {
				background: black;
			}
			#color-selector #red {
				background: red;
			}
			#color-selector #green {
				background: green;
			}
			#color-selector #blue {
				background: blue;
			}
		</style>
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
		<script type="text/javascript">
			jQuery(document).ready(function($) {
				var canvas, context;
				canvas = $("#draw-area");
				context = canvas[0].getContext("2d");
				var paint = false;
				var clickX = [], clickY = [], clickDrag = [];

				canvas.mousedown(function(e) {
					var mouseX = e.pageX - this.offsetLeft;
					var mouseY = e.pageY - this.offsetTop;
					paint = true;
					addClick(mouseX, mouseY);
					redraw();
				});

				canvas.mousemove(function(e) {
					if (paint) {
						var mouseX = e.pageX - this.offsetLeft;
						var mouseY = e.pageY - this.offsetTop;
						addClick(mouseX, mouseY, true);
						redraw();
					}
				});

				canvas.mouseup(function(e) {
					paint = false;
				});

				canvas.mouseleave(function(e) {
					paint = false;
				});
				function addClick(x, y, dragging) {
					clickX.push(x);
					clickY.push(y);
					clickDrag.push(dragging);
				}

				
				function redraw() {
					// reset the Canvas
					
					// draw styles
					context.strokeStyle = "red";
					context.lineJoin = "round";
					context.lineCap = "round";
					context.lineWidth = 5;
					
					// just render the last segment over the existing drawing
					renderDrawing(0, clickX.length-1);
				}

				// ANIMATION TEST
				$("#animate").click(drawBack);
				
				// render drawing with delay for animation
				function drawBack() {
					// reset the Canvas
					canvas[0].width = canvas[0].width;
					
					// draw styles
					context.strokeStyle = "blue";
					context.lineJoin = "round";
					context.lineCap = "round";
					context.lineWidth = 5;
					
					// draw out the whole path
					renderDrawing(0, 0);
				}

				/**
				 * recursive function to loop through array of points and draw each segment
				 * option to use a delay to animate the drawing
				 * needs context settings (styles, path, etc) set outside of it
				 * 
				 * @param {int} delay optional, defaults to 0
				 * @param {int} index optional, defaults to 0
				 */
				function renderDrawing(delay, index) {
					// set delay to 0 if not set
					if (delay == undefined)
						var delay = 0;
					// set index to first element if not set
					if (index == undefined)
						var index = 0;

					//-------------
					// draw segment
					//-------------
					context.beginPath();

					
					if (clickDrag[index] === true && index > 0) {
						// set context to previous point
						context.moveTo(clickX[index-1], clickY[index-1]);
					} else {
						// set context to current point, but offset just enough to make a dot
						context.moveTo(clickX[index] - 1, clickY[index]);
					}
					context.lineTo(clickX[index], clickY[index]);
					context.stroke();
					context.closePath();
					
					//------
					// loop
					//------
					if (index >= clickX.length)
						// return case - end of instructions, we're done here
						return;
					else {
						// recurse case - run it again with the next point
						index++;
						setTimeout(function() {
							renderDrawing(delay, index)
						}, delay);
					}

				}
			});

		</script>
	</head>
	<body>
		Drawing Canvas implimented in draw area
		<div id="draw-wrapper">
			<div id="toolbar-area">
				<div class="toolbar" id="color-selector">
					<div class="pallet" id="black"></div>
					<div class="pallet" id="red"></div>
					<div class="pallet" id="green"></div>
					<div class="pallet" id="blue"></div>
				</div>
				<div class="toolbar" id="line-thickness">
					<div class="pallet" id="thin">
						Thin
					</div>
					<div class="pallet" id="normal">
						Normal
					</div>
					<div class="pallet" id="thick">
						Thick
					</div>
				</div>
			</div>
			<canvas id="draw-area" width="300" height="400">
				this is where you would draw stuff
			</canvas>
			<button id="animate">
				Animate!
			</button>
		</div>
	</body>
</html>
